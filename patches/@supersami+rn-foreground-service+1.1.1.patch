diff --git a/node_modules/@supersami/rn-foreground-service/android/src/main/java/com/supersami/foregroundservice/NotificationHelper.java b/node_modules/@supersami/rn-foreground-service/android/src/main/java/com/supersami/foregroundservice/NotificationHelper.java
index 0f9ab3b..3e0f9d1 100644
--- a/node_modules/@supersami/rn-foreground-service/android/src/main/java/com/supersami/foregroundservice/NotificationHelper.java
+++ b/node_modules/@supersami/rn-foreground-service/android/src/main/java/com/supersami/foregroundservice/NotificationHelper.java
@@ -13,10 +13,8 @@ import android.os.Bundle;
 import androidx.core.app.NotificationCompat;
 import android.util.Log;
 
-
 // partially took ideas from: https://github.com/zo0r/react-native-push-notification/blob/master/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java
 
-
 class NotificationHelper {
     private static final String NOTIFICATION_CHANNEL_ID = "com.supersami.foregroundservice.channel";
 
@@ -35,12 +33,11 @@ class NotificationHelper {
     }
 
     private NotificationHelper(Context context) {
-        mNotificationManager = (NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
+        mNotificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
         this.context = context;
         this.config = new NotificationConfig(context);
     }
 
-
     Notification buildNotification(Context context, Bundle bundle) {
         if (bundle == null) {
             Log.e("NotificationHelper", "buildNotification: invalid config");
@@ -51,19 +48,21 @@ class NotificationHelper {
             return null;
         }
 
-        Log.d("SuperLog",""+bundle.getString("mainOnPress"));
+        Log.d("SuperLog", "" + bundle.getString("mainOnPress"));
 
         Intent notificationIntent = new Intent(context, mainActivityClass);
-        notificationIntent.putExtra("mainOnPress",bundle.getString("mainOnPress"));
+        notificationIntent.putExtra("mainOnPress", bundle.getString("mainOnPress"));
         int uniqueInt1 = (int) (System.currentTimeMillis() & 0xfffffff);
-        PendingIntent pendingIntent = PendingIntent.getActivity(context, uniqueInt1, notificationIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+        PendingIntent pendingIntent = PendingIntent.getActivity(context, uniqueInt1, notificationIntent,
+                PendingIntent.FLAG_MUTABLE);
 
-        if(bundle.getBoolean("button", false) == true) {
+        if (bundle.getBoolean("button", false) == true) {
             Log.d("SuperLog C ", "inButtonOnPress" + bundle.getString("buttonOnPress"));
             Intent notificationBtnIntent = new Intent(context, mainActivityClass);
             notificationBtnIntent.putExtra("buttonOnPress", bundle.getString("buttonOnPress"));
             int uniqueInt = (int) (System.currentTimeMillis() & 0xfffffff);
-            pendingBtnIntent = PendingIntent.getActivity(context, uniqueInt, notificationBtnIntent, PendingIntent.FLAG_UPDATE_CURRENT);
+            pendingBtnIntent = PendingIntent.getActivity(context, uniqueInt, notificationBtnIntent,
+                    PendingIntent.FLAG_MUTABLE);
         }
 
         String title = bundle.getString("title");
@@ -72,7 +71,7 @@ class NotificationHelper {
         final String priorityString = bundle.getString("importance");
 
         if (priorityString != null) {
-            switch(priorityString.toLowerCase()) {
+            switch (priorityString.toLowerCase()) {
                 case "max":
                     priority = NotificationCompat.PRIORITY_MAX;
                     break;
@@ -97,7 +96,7 @@ class NotificationHelper {
         String visibilityString = bundle.getString("visibility");
 
         if (visibilityString != null) {
-            switch(visibilityString.toLowerCase()) {
+            switch (visibilityString.toLowerCase()) {
                 case "private":
                     visibility = NotificationCompat.VISIBILITY_PRIVATE;
                     break;
@@ -114,17 +113,18 @@ class NotificationHelper {
 
         checkOrCreateChannel(mNotificationManager, bundle);
 
-        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(context, NOTIFICATION_CHANNEL_ID)
-            .setContentTitle(title)
-            .setVisibility(visibility)
-            .setPriority(priority)
-            .setContentIntent(pendingIntent)
-            .setOngoing(bundle.getBoolean("ongoing", false))
-            .setContentText(bundle.getString("message"));
-       if(bundle.getBoolean("button", false) == true){
-           notificationBuilder.addAction(R.drawable.redbox_top_border_background, bundle.getString("buttonText", "Button"), pendingBtnIntent);
-       }
-
+        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(context,
+                NOTIFICATION_CHANNEL_ID)
+                        .setContentTitle(title)
+                        .setVisibility(visibility)
+                        .setPriority(priority)
+                        .setContentIntent(pendingIntent)
+                        .setOngoing(bundle.getBoolean("ongoing", false))
+                        .setContentText(bundle.getString("message"));
+        if (bundle.getBoolean("button", false) == true) {
+            notificationBuilder.addAction(R.drawable.redbox_top_border_background,
+                    bundle.getString("buttonText", "Button"), pendingBtnIntent);
+        }
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             notificationBuilder.setColor(this.config.getNotificationColor());
@@ -132,17 +132,15 @@ class NotificationHelper {
 
         notificationBuilder.setStyle(new NotificationCompat.BigTextStyle().bigText(bundle.getString("message")));
 
-
         String iconName = bundle.getString("icon");
 
-        if(iconName == null){
+        if (iconName == null) {
             iconName = "ic_notification";
         }
         notificationBuilder.setSmallIcon(getResourceIdForResourceName(context, iconName));
 
-
         String largeIconName = bundle.getString("largeIcon");
-        if(largeIconName == null){
+        if (largeIconName == null) {
             largeIconName = "ic_launcher";
         }
 
@@ -156,7 +154,7 @@ class NotificationHelper {
         String numberString = bundle.getString("number");
         if (numberString != null) {
             int numberInt = Integer.parseInt(numberString);
-            if(numberInt > 0){
+            if (numberInt > 0) {
                 notificationBuilder.setNumber(numberInt);
             }
         }
@@ -188,6 +186,7 @@ class NotificationHelper {
     }
 
     private static boolean channelCreated = false;
+
     private void checkOrCreateChannel(NotificationManager manager, Bundle bundle) {
         if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O)
             return;
@@ -200,7 +199,7 @@ class NotificationHelper {
         final String importanceString = bundle.getString("importance");
 
         if (importanceString != null) {
-            switch(importanceString.toLowerCase()) {
+            switch (importanceString.toLowerCase()) {
                 case "default":
                     importance = NotificationManager.IMPORTANCE_DEFAULT;
                     break;
@@ -226,8 +225,9 @@ class NotificationHelper {
                     importance = NotificationManager.IMPORTANCE_HIGH;
             }
         }
-        Log.d("Check ", ""+bundle.getBoolean("vibration"));
-        NotificationChannel channel = new NotificationChannel(NOTIFICATION_CHANNEL_ID, this.config.getChannelName(), importance);
+        Log.d("Check ", "" + bundle.getBoolean("vibration"));
+        NotificationChannel channel = new NotificationChannel(NOTIFICATION_CHANNEL_ID, this.config.getChannelName(),
+                importance);
         channel.setDescription(this.config.getChannelDescription());
         channel.enableLights(true);
         channel.enableVibration(bundle.getBoolean("vibration"));
